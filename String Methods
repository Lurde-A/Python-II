                            FORMATTING METHODS
  1.1 You’ve been given two strings, the title of a poem and its author, and have been asked to reformat them slightly to fit the conventions of the organization’s database. Make 
poem_title have title case and save it to poem_title_fixed.
      poem_title = "spring storm"
      poem_author = "William Carlos Williams"
//
poem_title_fixed = poem_title.title()

  1.2 Print poem_title and poem_title_fixed. How did the string change?
//
print(poem_title)                                    PRINTED: spring storm
print(poem_title_fixed)                                       Spring Storm

  1.3 The organization’s database also needs the author’s name to be uppercase only. Make poem_author uppercase and save it to poem_author_fixed
//
poem_author_fixed = poem_author.upper()

  1.4 Print poem_author and poem_author_fixed. Again, how did the string change?
//
print(poem_author)                                    PRINTED: William Carlos Williams
print(poem_author_fixed)                                       WILLIAM CARLOS WILLIAMS

                            SPLITTING STRINGS
  2.1 In the code editor is a string of the first line of the poem Spring Storm by William Carlos Williams. Use .split() to create a list called line_one_words that contains each 
word in this line of poetry.
line_one = "The sky has given over"
//
line_one_words = line_one.split()
print(line_one_words)

                            SPLITTING STRINGS II
  3.1 Using .split() and the provided string, create a list called author_names containing each individual author name as it’s own string.
authors = "Audre Lorde,Gabriela Mistral,Jean Toomer,An Qi,Walt Whitman,Shel Silverstein,Carmen Boullosa,Kamala Suraiyya,Langston Hughes,Adrienne Rich,Nikki Giovanni"
//
author_names = authors.split(',')
print(author_names)
  3.2 Create another list called author_last_names that only contains the last names of the poets in the provided string.
//
names = [name.split() for name in author_names]
print(names)
author_last_names = [last_name[-1] for last_name in names]
print(author_last_names)

                            SPLITTING STRINGS III
  4.1 The organization has sent you over the full text for William Carlos Williams poem Spring Storm. They want you to break the poem up into its individual lines. Create a list 
called spring_storm_lines that contains a string for each line of Spring Storm.
      spring_storm_text = \
      """The sky has given over 
      its bitterness. 
      Out of the dark change 
      all day long 
      rain falls and falls 
      as if it would never end. 
      Still the snow keeps 
      its hold on the ground. 
      But water, water 
      from a thousand runnels! 
      It collects swiftly, 
      dappled with black 
      cuts a way for itself 
      through green ice in the gutters. 
      Drop after drop it falls 
      from the withered grass-stems 
      of the overhanging embankment."""
//
spring_storm_lines = spring_storm_text.split('\n')
print(spring_storm_lines)

                            JOINING STRINGS
  5.1 Use .join() to combine these words into a sentence and save that sentence as the string reapers_line_one.
reapers_line_one_words = ["Black", "reapers", "with", "the", "sound", "of", "steel", "on", "stones"]
//
reapers_line_one = ' '.join(reapers_line_one_words)
print(reapers_line_one)

                            JOINING STRINGS II
  6.1 You’ve been given a list, winter_trees_lines, that contains all the lines to William Carlos Williams poem, Winter Trees. You’ve been asked to join together the strings in 
the list together into a single string that can be used to display the full poem. Name this string winter_trees_full. Print your result to the terminal. Make sure that each line 
of the poem appears on a new line in your string.
winter_trees_lines = ['All the complicated details', 'of the attiring and', 'the disattiring are completed!', 'A liquid moon', 'moves gently among', 'the long branches.', 'Thus having prepared their buds', 'against a sure winter', 'the wise trees', 'stand sleeping in the cold.']
print(winter_trees_lines)
//
winter_trees_full = "\n".join(winter_trees_lines)
print(winter_trees_full)

                            .STRIP()
  7.1 First, use .strip() on each line in the list to remove the unnecessary whitespace and save it as a new list love_maybe_lines_stripped.
love_maybe_lines = ['Always    ', '     in the middle of our bloodiest battles  ', 'you lay down your arms', '           like flowering mines    ','\n' ,'   to conquer me home.    ']
//
love_maybe_lines_stripped = []
for line in love_maybe_lines:
  love_maybe_lines_stripped.append(line.strip())
print(love_maybe_lines_stripped)
  7.2 .join() the lines in love_maybe_lines_stripped together into one large multi-line string, love_maybe_full, that can be printed to display the poem. Each line of the poem 
should show up on its own line.
//
love_maybe_full = '\n'.join(love_maybe_lines_stripped)
  7.3 Print love_maybe_full.
// 
print(love_maybe_full)

                            REPLACE
  8.1 The poetry organization has sent over the bio for Jean Toomer as it currently exists on their site. Notice that there was a mistake with his last name and all instances 
of Toomer are lacking one o. Use .replace() to change all instances of Tomer in the bio to Toomer. Save the updated bio to the string toomer_bio_fixed. 
toomer_bio = \
"""
Nathan Pinchback Tomer, who adopted the name Jean Tomer early in his literary career, was born in Washington, D.C. in 1894. Jean is the son of Nathan Tomer was a mixed-race freedman, 
born into slavery in 1839 in Chatham County, North Carolina. Jean Tomer is most well known for his first book Cane, which vividly portrays the life of African-Americans in southern farmlands.
"""
//
toomer_bio_fixed = toomer_bio.replace('Tomer', 'Toomer')
print(toomer_bio_fixed)

                            .FIND()
  9.1 In the code editor is the first line of Gabriela Mistral’s poem God Wills It. At what index place does the word “disown” appear? Save that index place to the variable disown_placement.
god_wills_it_line_one = "The very earth will disown you"
//


