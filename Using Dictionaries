                                  GET A KEY
  1. We have provided a dictionary that maps the elements of astrology to the zodiac signs. Print out the list of zodiac signs associated with the "earth" element.
      zodiac_elements = {"water": ["Cancer", "Scorpio", "Pisces"], "fire": ["Aries", "Leo", "Sagittarius"], "earth": ["Taurus", "Virgo", "Capricorn"], "air":["Gemini", "Libra", "Aquarius"]}
//
print(zodiac_elements["earth"])
  2. Print out the list of the "fire" signs.
//
print(zodiac_elements["fire"])

                                  GET AN INVALID KEY
  1. Review the code in the editor and predict what the output will be. Run the code to see if you are correct! 
      zodiac_elements = {"water": ["Cancer", "Scorpio", "Pisces"], "fire": ["Aries", "Leo", "Sagittarius"], "earth": ["Taurus", "Virgo", "Capricorn"], "air":["Gemini", "Libra", "Aquarius"]}
      print(zodiac_elements["energy"])
//
PREDICTION: ERROR, because there are no such key in the dictionary as "energy".
TRUE OUTPUT: Traceback (most recent call last):
  File "script.py", line 3, in <module>
    print(zodiac_elements["energy"])
KeyError: 'energy'
  2. Because "energy" is not a key in zodiac_elements, a KeyError is thrown in the terminal! Using an if statement, check if "energy" is a key in zodiac_elements. Nest the existing 
print() statement within the if statement so that it will only execute if "energy" is a key. Run your code again. This time, there should be no errors in the terminal!
//
if "energy" in zodiac_elements:
  print(zodiac_elements["energy"])
  3. Add the key "energy" to the zodiac_elements. It should map to a value of "Not a Zodiac element". Run the code. Since "energy" is now a key, its value prints to the terminal!
//
zodiac_elements["energy"] = "Not a Zodiac element"
if "energy" in zodiac_elements:
  print(zodiac_elements["energy"])

                                  SAFELY GET A KEY
  1. Use .get() to get the value of "teraCoder"‘s user ID, with 100000 as a default value if the user doesn’t exist. Store it in a variable called tc_id. Print tc_id to the console.
      user_ids = {"teraCoder": 100019, "pythonGuy": 182921, "samTheJavaMaam": 123112, "lyleLoop": 102931, "keysmithKeith": 129384}
//
tc_id = user_ids.get('teraCoder', 100000)
print(tc_id)
  2. Use .get() to get the value of "superStackSmash"‘s user ID, with 100000 as a default value if the user doesn’t exist. Store it in a variable called stack_id. Print stack_id to the console.
//
stack_id = user_ids.get('superStackSmash', 100000)
print(stack_id)

                                  DELETE A KEY
  1. You are designing the video game Big Rock Adventure. We have provided a dictionary of items that are in the player’s inventory which add points to their health meter. In one line, 
add the corresponding value of the key "stamina grains" to the health_points variable and remove the item "stamina grains" from the dictionary. If the key does not exist, add 0 to 
health_points.
        available_items = {"health potion": 10, "cake of the cure": 5, "green elixir": 20, "strength sandwich": 25, "stamina grains": 15, "power stew": 30}
        health_points = 20
//
health_points += available_items.pop("stamina grains", 0)
  2. In one line, add the value of "power stew" to health_points and remove the item from the dictionary. If the key does not exist, add 0 to health_points.
//
health_points += available_items.pop("power stew", 0)
  3. In one line, add the value of "mystic bread" to health_points and remove the item from the dictionary. If the key does not exist, add 0 to health_points.
//
health_points += available_items.pop("mystic bread", 0)
  4. Print available_items and health_points.
//
print(available_items)
print(health_points)

                                  GET ALL KEYS
  1. Create a variable called users and assign it to be a dict_keys object of all of the keys of the user_ids dictionary.
        user_ids = {"teraCoder": 100019, "pythonGuy": 182921, "samTheJavaMaam": 123112, "lyleLoop": 102931, "keysmithKeith": 129384}
//
users = user_ids.keys()
  2. Create a variable called lessons and assign it to be a dict_keys object of all of the keys of the num_exercises dictionary.
        num_exercises = {"functions": 10, "syntax": 13, "control flow": 15, "loops": 22, "lists": 19, "classes": 18, "dictionaries": 18}
//
lessons = num_exercises.keys()
  3. Print users to the console.
     Print lessons to the console.
//
print(users)
print(lessons)

                                  GET ALL VALUES
  1. Create a variable called total_exercises and set it equal to 0. 
        num_exercises = {"functions": 10, "syntax": 13, "control flow": 15, "loops": 22, "lists": 19, "classes": 18, "dictionaries": 18}
//
total_exercises = 0
  2. Iterate through the values in the num_exercises dictionary and add each value to the total_exercises variable.
//
for value in num_exercises.values():
  total_exercises += value
  3. Print the total_exercises variable to the console.
//
num_exercises = {"functions": 10, "syntax": 13, "control flow": 15, "loops": 22, "lists": 19, "classes": 18, "dictionaries": 18}
total_exercises = 0
for value in num_exercises.values():
  total_exercises += value
print(total_exercises)

                                  GET ALL ITEMS
  1. Use a for loop to iterate through the items of pct_women_in_occupation. For each key : value pair, print out a string that looks like:
        Women make up [value] percent of [key]s.
        pct_women_in_occupation = {"CEO": 28, "Engineering Manager": 9, "Pharmacist": 58, "Physician": 40, "Lawyer": 37, "Aerospace Engineer": 9}
//
for key, value in pct_women_in_occupation.items():
  print("Women make up " + str(value) + " percent of " + key + "s")

                                  REVIEW
  1. We have provided a pack of tarot cards, tarot. You are going to do a three card spread of your past, present, and future.
Create an empty dictionary called spread.
        tarot = { 1:	"The Magician", 2:	"The High Priestess", 3:	"The Empress", 4:	"The Emperor", 5:	"The Hierophant", 6:	"The Lovers", 7:	"The Chariot", 8:	"Strength", 
9:	"The Hermit", 10:	"Wheel of Fortune", 11:	"Justice", 12:	"The Hanged Man", 13:	"Death", 14:	"Temperance", 15:	"The Devil", 16:	"The Tower", 17:	"The Star", 18:	"The Moon", 
19:	"The Sun", 20:	"Judgement", 21:	"The World", 22: "The Fool"}
//
spread = {}
  2. The first card you draw is card 13. Pop the value assigned to the key 13 out of the tarot dictionary and assign it as the value of the "past" key of spread.
//
spread["past"] = tarot.pop(13, "No past")
  3. The second card you draw is card 22. Pop the value assigned to the key 22 out of the tarot dictionary and assign it as the value of the "present" key of spread.
//
spread["present"] = tarot.pop(22, "No present")
  4. The third card you draw is card 10. Pop the value assigned to the key 10 out of the tarot dictionary and assign it as the value of the "future" key of spread.
//
spread["future"] = tarot.pop(10, "No future")
  5. Iterate through the items in the spread dictionary and for each key: value pair, print out a string that says:
        Your {key} is the {value} card.
//
for key, value in spread.items():
  print("Your " + str(key) + " is the " + value + " card.")
